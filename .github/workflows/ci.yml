# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: cms_dev
        ports:
          - 3306:3306

      mongo:
        image: mongo:8.0
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
        ports:
          - 27017:27017

    env:
      DB_TYPE: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: cms_dev
      MONGO_URL: mongodb://root:root@127.0.0.1:27017/?authSource=admin
      REDIS_URL: redis://localhost:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js & cache
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Wait for MySQL
        run: |
          echo "⏳ Waiting for MySQL..."
          for i in {1..12}; do
            if mysqladmin ping --host=127.0.0.1 --silent; then
              echo "✅ MySQL ready"
              break
            fi
            echo "  MySQL not ready ($i/12)..."
            sleep 5
          done

      - name: Wait for MongoDB
        run: |
          echo "⏳ Waiting for MongoDB..."
          for i in {1..12}; do
            if docker exec $(docker ps -q -f ancestor=mongo:8.0) \
                 mongosh --username root --password root \
                         --authenticationDatabase admin \
                         --quiet --eval 'db.adminCommand({ ping: 1 })' \
               >/dev/null 2>&1; then
              echo "✅ MongoDB ready"
              break
            fi
            echo "  MongoDB not ready ($i/12)..."
            sleep 5
          done

      - name: Setup Dev DB
        run: npm run db:setup:dev

      - name: Setup Test DB
        run: npm run db:setup:test

      - name: Auto-fix ESLint issues
        run: npm run lint -- --fix

      - name: Lint (no errors allowed)
        run: npm run lint

      - name: Format
        run: npm run format

      - name: Test
        run: npm run test:ci
